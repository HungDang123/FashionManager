/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import com.pro1041.dao.DAO_nhanVien;
import com.pro1041.util.DialogHelper;
import com.pro1041.util.ShareHelper;
import com.pro1041.util.jdbcHelper;
import java.awt.Color;

/**
 *
 * @author HUNG
 */
public class ChangePass extends javax.swing.JDialog {

    /**
     * Creates new form ChangePass
     */
    public ChangePass(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

    }

    public void changePass(String pass, String id) {
        try {
            String sql = "update nhanVien set matKhau = ? where maNhanVien = ?";
            jdbcHelper.executeUpdate(sql, pass, id);
        } catch (Exception e) {
            System.out.println("Change pass: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public void changePassword() {
        String oldPass = (txtOldPass.getText());
        String newPass = txtNewPass.getText();
        String comfirmPass = txtComfirmPass.getText();
        System.out.println(ShareHelper.USER.getMatKhau());
        if (ShareHelper.USER.getMatKhau().equals(oldPass)) {
            if (newPass.equals(comfirmPass)) {
                changePass(newPass, (ShareHelper.USER.getMaNhanVien()));
                DialogHelper.alert("Đổi mật khẩu thành công");
            } else {
                DialogHelper.alert("Mật khẩu không khớp");
            }
        } else {
            DialogHelper.alert("Mật khẩu hiện tại không đúng");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtOldPass = new javax.swing.JTextField();
        txtNewPass = new javax.swing.JTextField();
        txtComfirmPass = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lexend Deca", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Đổi mật khẩu");

        jLabel2.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        jLabel2.setText("Mật khẩu cũ:");

        jLabel3.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        jLabel3.setText("Mật khẩu mới:");

        jLabel4.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        jLabel4.setText("Xác nhận mật khẩu:");

        txtOldPass.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        txtOldPass.setForeground(new java.awt.Color(153, 153, 153));
        txtOldPass.setText("Nhập mật khẩu cũ ");
        txtOldPass.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtOldPassCaretUpdate(evt);
            }
        });
        txtOldPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOldPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOldPassFocusLost(evt);
            }
        });
        txtOldPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtOldPassMousePressed(evt);
            }
        });

        txtNewPass.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        txtNewPass.setForeground(new java.awt.Color(153, 153, 153));
        txtNewPass.setText("Nhập mật khẩu mới");
        txtNewPass.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtNewPassCaretUpdate(evt);
            }
        });
        txtNewPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNewPassMousePressed(evt);
            }
        });
        txtNewPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewPassActionPerformed(evt);
            }
        });

        txtComfirmPass.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        txtComfirmPass.setForeground(new java.awt.Color(153, 153, 153));
        txtComfirmPass.setText("Xác nhận mật khẩu cũ");
        txtComfirmPass.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtComfirmPassCaretUpdate(evt);
            }
        });
        txtComfirmPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtComfirmPassMousePressed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(225, 185, 87));
        btnSubmit.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        btnSubmit.setText("Đổi mật khẩu");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(122, 128, 240));
        btnBack.setFont(new java.awt.Font("Lexend Deca", 0, 14)); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(13, 13, 13))
                    .addComponent(txtOldPass)
                    .addComponent(txtComfirmPass, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(txtNewPass, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtOldPass, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtComfirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtOldPassCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtOldPassCaretUpdate
        if (txtOldPass.getText().length() > 0) {
            txtOldPass.setForeground(Color.black);
        } else {
            txtOldPass.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_txtOldPassCaretUpdate

    private void txtOldPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOldPassFocusGained

    }//GEN-LAST:event_txtOldPassFocusGained

    private void txtOldPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOldPassFocusLost

    }//GEN-LAST:event_txtOldPassFocusLost

    private void txtOldPassMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtOldPassMousePressed
        if (txtOldPass.getText().equals("Nhập mật khẩu cũ ")) {
            txtOldPass.setText("");
        }
    }//GEN-LAST:event_txtOldPassMousePressed

    private void txtNewPassCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtNewPassCaretUpdate
        if (txtNewPass.getText().length() > 0) {
            txtNewPass.setForeground(Color.black);
        } else {
            txtNewPass.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_txtNewPassCaretUpdate

    private void txtNewPassMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNewPassMousePressed
        if (txtNewPass.getText().equals("Nhập mật khẩu mới")) {
            txtNewPass.setText("");
        }
    }//GEN-LAST:event_txtNewPassMousePressed

    private void txtComfirmPassCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtComfirmPassCaretUpdate
        if (txtComfirmPass.getText().length() > 0) {
            txtComfirmPass.setForeground(Color.black);
        } else {
            txtComfirmPass.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_txtComfirmPassCaretUpdate

    private void txtComfirmPassMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtComfirmPassMousePressed
        if (txtComfirmPass.getText().equals("Xác nhận mật khẩu cũ")) {
            txtComfirmPass.setText("");
        }
    }//GEN-LAST:event_txtComfirmPassMousePressed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        changePassword();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNewPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChangePass dialog = new ChangePass(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtComfirmPass;
    private javax.swing.JTextField txtNewPass;
    private javax.swing.JTextField txtOldPass;
    // End of variables declaration//GEN-END:variables
}
